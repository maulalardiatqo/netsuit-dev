/**
 * @NApiVersion 2.1
 * @NScriptType UserEventScript
 * @NModuleScope SameAccount
 */

define(["N/record", "N/search"], function(
  record,
  search,
) {
  function afterSubmit(context) {
    try {
      if (context.type == context.UserEventType.CREATE || context.type == context.UserEventType.EDIT) {

        var rec = context.newRecord;

        var prRec = record.load({
          type: rec.type,
          id: rec.id,
        });
        var prType = prRec.getValue("custbody_abj_req_type");

        var dataRunningNumbers = search.create({
          type: 'customrecord_pr_autogenerated_number',
          columns: ['internalid', 'name', 'custrecord_pr_increment', 'custrecord_pr_prefix', 'custrecord_pr_type', 'custrecord_pr_number_digit_length'],
          filters: [{
            name: 'custrecord_pr_type',
            operator: 'is',
            values: prType
          }, ]
        });

        log.debug("After Create search", "after create search");

        var dataRunningNumbersSet = dataRunningNumbers.run();
        dataRunningNumbers = dataRunningNumbersSet.getRange({
          start: 0,
          end: 1
        });

        log.debug("dataRunningNumbers", dataRunningNumbers);

        dataRunningNumbers.forEach(function(dataRunningNumber) {
          var runNumberId = dataRunningNumber.getValue({
            name: 'internalid'
          });
          var prefixNumber = dataRunningNumber.getValue({
            name: 'custrecord_pr_prefix'
          });
          var lastNumber = parseInt(dataRunningNumber.getValue({
            name: 'custrecord_pr_increment'
          }) || 0) + 1;
          log.debug("lastNumber", lastNumber);
          var numberDigit = parseInt(dataRunningNumber.getValue({
            name: 'custrecord_pr_number_digit_length'
          }));

          var digitPart = '0';
          digitPart = digitPart.repeat(numberDigit) + lastNumber.toString();

          function rightStr(str, chr) {
            return str.slice(str.length - chr, str.length);
          }
          log.debug("DigitPart0", digitPart);
          digitPart = rightStr(digitPart, numberDigit);
          var runNumber = prefixNumber + digitPart;
          log.debug("runNumber", runNumber);

          prRec.setValue({
            fieldId: 'tranid',
            value: runNumber,
          });

          var save = prRec.save({
            enableSourcing: false,
            ignoreMandatoryFields: true
          });
          log.debug("save", save);

          var runNumber_Toupdate = record.load({
            type: 'customrecord_pr_autogenerated_number',
            id: runNumberId,
            isDynamic: true
          });

          runNumber_Toupdate.setValue({
            fieldId: 'custrecord_pr_increment',
            value: lastNumber,
            ignoreFieldChange: false
          });

          runNumber_Toupdate.save({
            enableSourcing: false,
            ignoreMandatoryFields: true
          });

        });
      }
    } catch (e) {
      err_messages = 'error in after submit ' + e.name + ': ' + e.message;
      log.debug(err_messages);
    }
  }

  return {
    afterSubmit: afterSubmit,
  };
});