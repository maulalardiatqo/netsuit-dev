/**
 * @NApiVersion 2.1
 * @NScriptType Suitelet
 */
// This sample shows how to render search results into a PDF file.
define(["N/render", "N/search", "N/record", "N/log", "N/file", "N/http", 'N/config', 'N/format', 'N/email', 'N/runtime'],
    function(render, search, record, log, file, http, config, format, email, runtime) {
        function removeDecimalFormat(number) {
            return number.toString().substring(0, number.toString().length - 3);
        }
        function pembulatan(angka) {
            if (angka >= 0) {
                var bulat = Math.floor(angka);
                var desimal = angka - bulat;
                
                if (desimal >= 0.5) {
                    return Math.ceil(angka);
                } else {
                return Math.floor(angka);
                }
            } else {
                return Math.ceil(angka);
            }
        }

        function onRequest(context) {
            var recid = context.request.parameters.id;
            // load PO
            var poRecord = record.load({
                type: record.Type.PURCHASE_ORDER,
                id: recid,
                isDynamic: false,
            });
            var companyInfo = config.load({
                type: config.Type.COMPANY_INFORMATION
            });
            var legalName = companyInfo.getValue("legalname");

            log.debug('legalName', legalName);
            var logo = companyInfo.getValue('formlogo');
            var filelogo;
            var urlLogo = '';
            if (logo) {
                filelogo = file.load({
                    id: logo
                });
                //get url
                urlLogo = filelogo.url.replace(/&/g, "&amp;");
            }

            var vendor_id = poRecord.getValue('entity');
            if(vendor_id){
                var vendorRecord = record.load({
                    type: record.Type.VENDOR,
                    id: vendor_id,
                    isDynamic: false,
                });
                var venName
                var isperson = vendorRecord.getValue('isperson');
                // log.debug('isperson', isperson)
                if(isperson == 'T'){
                    var firstname = vendorRecord.getValue('firstname') || ''
                    var middleName = vendorRecord.getValue('middlename') || '';
                    var lastname = vendorRecord.getValue('lastname')|| ''
                    venName = firstname + ' '+ middleName+ ' ' + lastname;
                    // log.debug('venName', venName);
                }else{
                    var isChecklist = vendorRecord.getValue('isautogeneratedrepresentingentity');
                    // log.debug('isCheck', isChecklist);

                    if(isChecklist === true){
                        venName = vendorRecord.getValue('comments');
                    }else{
                        venName = vendorRecord.getValue('companyname');
                    }
                    
                }
                var venAddres = vendorRecord.getValue('billaddr1');
                if(venAddres === ''){
                    venAddres = vendorRecord.getValue('defaultaddress');
                }
                if(venAddres){
                    log.debug('vendAderss', venAddres);
                    if(venAddres.includes('&')){
                        log.debug('includes &')
                        venAddres = venAddres.replace(/&/g, ' dan ')
                    }
                }

            }
            log.debug('venName', venName)
            // PO data
            var tandId = poRecord.getValue('tranid');
            var POdate = poRecord.getValue('trandate');
            log.debug('podate', POdate);
            log.debug('tandId', tandId)
            if(POdate){
                POdate = format.format({
                    value: POdate,
                    type: format.Type.DATE
                });
            }

            var response = context.response;
            var xml = "";
            var header = "";
            var body = "";
            var headerHeight = '1%';
            var style = "";
            var footer = "";
            var pdfFile = null;

            
            style += "<style type='text/css'>";
            style += ".tg {border-collapse:collapse; border-spacing: 0; width: 100%;}";
            style += ".tg .tg-headerlogo{align:center; border-right: none;border-left: none;border-top: none;border-bottom: none;}";
            style += ".tg .tg-img-logo{width:150px; height:90px; object-vit:cover;}";
            style += ".tg .tg-headerrow{align: right;font-size:12px;}";
            style += ".tg .tg-headerrow_legalName{align: right;font-size:13px;word-break:break-all; font-weight: bold;}";
            style += ".tg .tg-headerrow_Total{align: right;font-size:16px;word-break:break-all; font-weight: bold;}";
            style += ".tg .tg-headerrow_left{align: left;font-size:12px;}";
            style += ".tg .tg-head_body{align: left;font-size:12px;font-weight: bold; border-top: 3px solid black; border-bottom: 3px solid black;}";
            style += ".tg .tg-b_body{align: left;font-size:12px; border-bottom: solid black 2px;}";
            style += ".tg .tg-f_body{align: right;font-size:14px;border-bottom: solid black 2px;}";
            style += ".tg .tg-foot{font-size:11px; color: #808080; position: absolute; bottom: 0;}";
            style += "</style>";


            header += "<table class='tg' width=\"100%\"  style=\"table-layout:fixed;\">";
            header += "<tbody>";
            header += "</tbody>";
            header += "</table>";

            body += "<table class='tg' width=\"100%\"  style=\"table-layout:fixed;\">";
            body += "<tbody>";
            body += "<tr>";
            if (urlLogo) {
                body += "<td class='tg-headerlogo' style='width:100%;vertical-align:center; align:center;'><div style='display: flex; height:130px; width:150px;'><img class='tg-img-logo' src= '" + urlLogo + "' ></img></div></td>";
            }
            body += "</tr>";
            body += "</tbody>";
            body += "</table>";

            footer += "<table class='tg' style='table-layout: fixed;'>";
            footer += "<tbody>";
            footer += "<tr class='tg-foot'>";
            footer += "<td style='align:left'>Purchase Order # "+tandId+"</td>"
            footer += "<td style='align:right'></td>"
            footer += "</tr>";
            footer += "</tbody>";
            footer += "</table>";

            var xml = '<?xml version="1.0"?>\n<!DOCTYPE pdf PUBLIC "-//big.faceless.org//report" "report-1.1.dtd">';
            xml += "<pdf>";
            xml += "<head>";
            xml += style;
            xml += "<macrolist>";
            xml += "<macro id=\"nlheader\">";
            xml += header;
            xml += "</macro>";
            xml += "<macro id=\"nlfooter\">";
            xml += footer;
            xml += "</macro>";
            xml += "</macrolist>";
            xml += "</head>"
            xml += "<body font-size='10' style='font-family: Tahoma,sans-serif;height: 29.7cm; width: 21cm;' header='nlheader' header-height='" + headerHeight + "' footer='nlfooter' footer-height='3%'>";
            xml += body;
            xml += "\n</body>\n</pdf>";

            xml = xml.replace(/ & /g, ' &amp; ');
            response.renderPdf({
                xmlString: xml
            });

        }
        function getPOItem(context, poRecord){
            var itemCount = poRecord.getLineCount({
                sublistId: 'item'
            });
            // log.debug('itemCount', itemCount);
            
            if(itemCount > 0){
                var body = "";
                for(var index = 0; index < itemCount; index++){
                    var qty = poRecord.getSublistValue({
                        sublistId: 'item',
                        fieldId: 'quantity',
                        line: index
                    });
                    var description = poRecord.getSublistValue({
                        sublistId: 'item',
                        fieldId: 'description',
                        line: index
                    });
                    if(description.includes('\\')){
                        description = description.replace(/\\/g, '<br/>');
                    }
                    var unit = poRecord.getSublistValue({
                        sublistId: 'item',
                        fieldId: 'units',
                        line: index
                    });
                    var rate;
                    // var rateBef = poRecord.getSublistValue({
                    //     sublistId: 'item',
                    //     fieldId: 'amount',
                    //     line: index
                    // });
                    var ammount = poRecord.getSublistValue({
                        sublistId: 'item',
                        fieldId: 'amount',
                        line: index
                    });
                    // if(rateBef){
                    //     rate = rateBef
                    // }else{
                    //     rate = Number(ammount) / Number(qty)
                    // }
                    rate = Number(ammount) / Number(qty)
                    if(rate){
                        rate = pembulatan(rate)
                        rate = format.format({
                            value: rate,
                            type: format.Type.CURRENCY
                        });
                    }
                    
                    var taxAmt = poRecord.getSublistValue({
                        sublistId: 'item',
                        fieldId: 'tax1amt',
                        line: index
                    });
                    if(taxAmt){
                        taxAmt = pembulatan(taxAmt)
                        taxAmt = format.format({
                            value: taxAmt,
                            type: format.Type.CURRENCY
                        });
                    }
                    // log.debug('amount', ammount)
                    if(ammount){
                        ammount = pembulatan(ammount)
                        ammount = format.format({
                            value: ammount,
                            type: format.Type.CURRENCY
                        });
                    }
                   
                    body += "<tr>";
                    body += "<td class='tg-b_body'>"+qty+" - "+unit+ "Pcs</td>";
                    body += "<td class='tg-b_body'>"+description+"</td>";
                    body += "<td class='tg-b_body' style='align:right'>"+removeDecimalFormat(rate)+"</td>";
                    body += "<td class='tg-b_body' style='align:right'> X </td>";
                    body += "<td class='tg-b_body' style='align:right;'>"+removeDecimalFormat(ammount)+"</td>";
                    body += "</tr>";
                }
                return body;
            }
            
        }
        function getPOExpense(context, poRecord){
            var expCont = poRecord.getLineCount({
                sublistId : 'expense'
            });
            if(expCont > 0){
                var body = "";
                for(var index = 0; index < expCont; index++){
                    var qty = 1;
                    var description = poRecord.getSublistValue({
                        sublistId: 'expense',
                        fieldId: 'memo',
                        line: index
                    });
                    if(description.includes('\\')){
                        description = description.replace(/\\/g, '<br/>');
                    }
                    var amount = poRecord.getSublistValue({
                        sublistId: 'expense',
                        fieldId: 'amount',
                        line: index
                    });
                    if(amount){
                        var amountBef = amount
                        
                        amount = pembulatan(amount)
                        amount = format.format({
                            value: amount,
                            type: format.Type.CURRENCY
                        });
                    }
                    var taxamt_exp = poRecord.getSublistValue({
                        sublistId: 'expense',
                        fieldId: 'tax1amt',
                        line: index
                    });
                    if(taxamt_exp){
                        taxamt_exp = pembulatan(taxamt_exp)
                        taxamt_exp = format.format({
                            value: taxamt_exp,
                            type: format.Type.CURRENCY
                        });
                    }
                    // log.debug('amountbef', amountBef)
                    var grosamt_exp = Number(amountBef) * Number(qty)
                    // log.debug('grosamt_exp', grosamt_exp)
                    if(grosamt_exp){
                        grosamt_exp = pembulatan(grosamt_exp)
                        grosamt_exp = format.format({
                            value: grosamt_exp,
                            type: format.Type.CURRENCY
                        });
                    }
                    body += "<tr>";
                    body += "<td class='tg-b_body'>"+qty+"</td>";
                    body += "<td class='tg-b_body'>"+description+"</td>";
                    body += "<td class='tg-b_body' style='align:right'>"+removeDecimalFormat(amount)+"</td>";
                    body += "<td class='tg-b_body' style='align:right'>X</td>";
                    body += "<td class='tg-b_body' style='align:right;'>"+removeDecimalFormat(grosamt_exp)+"</td>";
                    body += "</tr>";
                }
                return body;
            }
            
        }
    return {
        onRequest: onRequest,
    };
});